// Code generated by mockery. DO NOT EDIT.

package service

import mock "github.com/stretchr/testify/mock"

// MockConfigProvider is an autogenerated mock type for the ConfigProvider type
type MockConfigProvider struct {
	mock.Mock
}

type MockConfigProvider_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConfigProvider) EXPECT() *MockConfigProvider_Expecter {
	return &MockConfigProvider_Expecter{mock: &_m.Mock}
}

// GetAwsRegion provides a mock function with no fields
func (_m *MockConfigProvider) GetAwsRegion() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAwsRegion")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockConfigProvider_GetAwsRegion_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAwsRegion'
type MockConfigProvider_GetAwsRegion_Call struct {
	*mock.Call
}

// GetAwsRegion is a helper method to define mock.On call
func (_e *MockConfigProvider_Expecter) GetAwsRegion() *MockConfigProvider_GetAwsRegion_Call {
	return &MockConfigProvider_GetAwsRegion_Call{Call: _e.mock.On("GetAwsRegion")}
}

func (_c *MockConfigProvider_GetAwsRegion_Call) Run(run func()) *MockConfigProvider_GetAwsRegion_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockConfigProvider_GetAwsRegion_Call) Return(_a0 string) *MockConfigProvider_GetAwsRegion_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConfigProvider_GetAwsRegion_Call) RunAndReturn(run func() string) *MockConfigProvider_GetAwsRegion_Call {
	_c.Call.Return(run)
	return _c
}

// GetAwsS3Bucket provides a mock function with no fields
func (_m *MockConfigProvider) GetAwsS3Bucket() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAwsS3Bucket")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockConfigProvider_GetAwsS3Bucket_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAwsS3Bucket'
type MockConfigProvider_GetAwsS3Bucket_Call struct {
	*mock.Call
}

// GetAwsS3Bucket is a helper method to define mock.On call
func (_e *MockConfigProvider_Expecter) GetAwsS3Bucket() *MockConfigProvider_GetAwsS3Bucket_Call {
	return &MockConfigProvider_GetAwsS3Bucket_Call{Call: _e.mock.On("GetAwsS3Bucket")}
}

func (_c *MockConfigProvider_GetAwsS3Bucket_Call) Run(run func()) *MockConfigProvider_GetAwsS3Bucket_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockConfigProvider_GetAwsS3Bucket_Call) Return(_a0 string) *MockConfigProvider_GetAwsS3Bucket_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConfigProvider_GetAwsS3Bucket_Call) RunAndReturn(run func() string) *MockConfigProvider_GetAwsS3Bucket_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockConfigProvider creates a new instance of MockConfigProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConfigProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConfigProvider {
	mock := &MockConfigProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
